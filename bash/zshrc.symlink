# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
export DOTFILES=$HOME/code/dotfiles/
export VAGRANT_DEFAULT_PROVIDER=libvirt

# source every .zsh file in this rep
for config_file ($DOTFILES/**/*.zsh) source $config_file

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="amuse"

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(history fancy-ctrl-z docker dirhistory bgnotify branch bundler colored-man-pages common-aliases dircycle ruby tmux jira npm yarn)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
export JFX_DIR="/usr/lib/jvm/java-1.8.0-oracle-1.8.0.131-1jpp.1.el7_3.x86_64/jre/lib/ext"
export BUNDLER_EDITOR=vim
#source ~/.rvm/scripts/rvm
source <(kubectl completion zsh)

# GOLANG PROJECTS
[[ -s "/home/xcanalma/.gvm/scripts/gvm" ]] && source "/home/xcanalma/.gvm/scripts/gvm"
export GOPATH=$HOME/code/golang
export PATH="$PATH:$GOPATH/bin"
export PATH="$PATH:/opt"
export KIALI_PATH=/home/xcanalma/code/golang/src/github.com/kiali/kiali
export ISTIO_DEV_PATH=/home/xcanalma/.gvm/pkgsets/go1.14.3/global/src/istio.io/istio
export OPERATOR_PATH=/home/xcanalma/code/golang/src/github.com/maistra/istio-operator

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# Istio dev vars
# https://github.com/istio/istio/wiki/Preparing-for-Development#setting-up-go
export ISTIO=/home/xcanalma/.gvm/pkgsets/go1.13.1/global/src/istio.io/istio
export NICKNAME=xeviknal
export HUB="docker.io/$NICKNAME"
export TAG=$NICKNAME
export GITHUB_USER=xeviknal
export KUBECONFIG=${HOME}/.kube/config

# Kiali
export CLUSTER_TYPE=minikube
export AUTH_STRATEGY=anonymous
export CONSOLE_VERSION=local
export DEFAULT_K8S_DRIVER=kvm2
export OPERATOR_IMAGE_PULL_POLICY=IfNotPresent
export KIALI_IMAGE_PULL_POLICY=IfNotPresent
export CLUSTER_REPO_INTERNAL=quay.io
export KIALI_IMAGE_VERSION=dev
export PATH=$PATH:/opt/kind

complete -F __start_kubectl k

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
#__conda_setup="$('/home/xcanalma/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
#if [ $? -eq 0 ]; then
  #eval "$__conda_setup"
#else
  #if [ -f "/home/xcanalma/miniconda3/etc/profile.d/conda.sh" ]; then
      #. "/home/xcanalma/miniconda3/etc/profile.d/conda.sh"
  #else
      #export PATH="/home/xcanalma/miniconda3/bin:$PATH"
  #fi
#fi
#unset __conda_setup
# <<< conda initialize <<<

