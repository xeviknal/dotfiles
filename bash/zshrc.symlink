# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
export DOTFILES=$HOME/code/dotfiles/
export VAGRANT_DEFAULT_PROVIDER=libvirt

# source every .zsh file in this rep
for config_file ($DOTFILES/**/*.zsh) source $config_file

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="amuse"

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(history fancy-ctrl-z docker dirhistory bgnotify branch bundler colored-man-pages common-aliases dircycle tmux jira kubectl zsh-autosuggestions)

source $ZSH/oh-my-zsh.sh

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
export JFX_DIR="/usr/lib/jvm/java-1.8.0-oracle-1.8.0.131-1jpp.1.el7_3.x86_64/jre/lib/ext"
export GPG_TTY=$(tty)
export BUNDLER_EDITOR=vim
export EDITOR=vim

# GOLANG PROJECTS
[[ -s "/home/xeviknal/.gvm/scripts/gvm" ]] && source "/home/xeviknal/.gvm/scripts/gvm"
export GOPATH=$HOME/code/golang
export PATH="$PATH:$GOPATH/bin:$HOME/kustomize:$HOME/kubectl:/opt"
export KIALI_PATH=/home/xeviknal/code/golang/src/github.com/kiali/kiali
export ISTIO_DEV_PATH=/home/xeviknal/.gvm/pkgsets/go1.14.3/global/src/istio.io/istio
export OPERATOR_PATH=/home/xeviknal/code/golang/src/github.com/maistra/istio-operator

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# Istio dev vars
# https://github.com/istio/istio/wiki/Preparing-for-Development#setting-up-go
export ISTIO=/home/xeviknal/.gvm/pkgsets/go1.13.1/global/src/istio.io/istio
export NICKNAME=xeviknal
export HUB="docker.io/$NICKNAME"
export TAG=$NICKNAME
export GITHUB_USER=xeviknal
export KUBECONFIG=${HOME}/.kube/config

# Kiali
export CLUSTER_TYPE=minikube
export AUTH_STRATEGY=anonymous
export CONSOLE_VERSION=local
export DEFAULT_K8S_DRIVER=kvm2
export OPERATOR_IMAGE_PULL_POLICY=IfNotPresent
export KIALI_IMAGE_PULL_POLICY=IfNotPresent
export CLUSTER_REPO_INTERNAL=quay.io
export KIALI_IMAGE_VERSION=dev
export PATH=$PATH:/opt/kind:/opt/go-migrate:/opt/nsq/bin

complete -F __start_kubectl k

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/xeviknal/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/xeviknal/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/xeviknal/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/xeviknal/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

### Hasty
export JIRA_URL=https://hasty.atlassian.net/
export TESTER_ACCOUNT_PRIVATE_KEY="$(base64 < $HOME/.ssh/labelz-tester.key)"
export PATH="$PATH:/home/xeviknal/.local:/home/xeviknal/.local/bin"
export LABELZ_PATH=/home/xeviknal/code/golang/src/github.com/cloudfactory/labelz
export LABELZCMP="$LABELZ_PATH/docker-compose.yml"
export LABELZE2E="$LABELZ_PATH/docker-compose.e2e.yml"
export PATH=/usr/local/cuda/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
source "$LABELZ_PATH/deployment/configs/shared.sh"
source "/home/xeviknal/code/hasty-lab/export_e2e_env.sh"
export PYTHON_BASE_ML=$AWS_ACCOUNT_ID.dkr.ecr.eu-west-1.amazonaws.com/hasty/ml:$PYTHON_BASE_ML_TAG
export PYTHON_BASE_BACKEND=$AWS_ACCOUNT_ID.dkr.ecr.eu-west-1.amazonaws.com/hasty/backend:$PYTHON_BASE_BACKEND_TAG
export PYTHON_BASE_AIOBACKEND=$AWS_ACCOUNT_ID.dkr.ecr.eu-west-1.amazonaws.com/hasty/aiobackend:$PYTHON_BASE_AIOBACKEND_TAG

autoload -U +X bashcompinit && bashcompinit
source <(kubectl completion zsh)
complete -o nospace -C /usr/bin/terraform terraform
